{"version":3,"sources":["components/ContactForm/ContactForm.module.css","redux/Contacts/contacts-actions.js","redux/Contacts/contacts-redusers.js","redux/store.js","components/Container/Container.js","redux/Contacts/contacts-operations.js","redux/Contacts/contacts-selectors.js","components/ContactListItem/ContactListItem.js","components/ContactList/ContactList.js","components/ContactList/ContactList.container.js","components/Filter/Filter.js","components/ContactForm/ButtonForm.js","components/ContactForm/ContactForm.js","App.js","index.js"],"names":["module","exports","fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","filteredContact","itemsReducer","createReducer","_","payload","state","filter","id","filterReducer","loading","error","action","combineReducers","items","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","store","configureStore","reducer","contacts","contactsReducer","devTools","process","useStyles","createUseStyles","container","margin","right","left","top","padding","width","Container","children","classes","className","axios","defaults","baseURL","getFilterValue","getFilteredContacts","createSelector","allContacts","normalizedFilter","toLowerCase","contact","name","includes","button","marginLeft","backgroundColor","border","borderRadius","cursor","item","marginBottom","ContactListItem","number","onDeleteContact","type","onClick","ContactList","filteredContacts","map","connect","dispatch","a","delete","deleteContact","input","outline","boxShadow","value","onHandleChange","event","target","titel","placeholder","onChange","bottom","display","ButtonForm","onSubmitForm","getState","some","alert","post","then","data","catch","addContact","labelInputIdName","uuidv4","labelInputIdNumber","useState","setName","setNumber","handleChange","currentTarget","resetForm","styles","form","onSubmit","preventDefault","label","htmlFor","required","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.adbd68c5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__3buad\",\"label\":\"ContactForm_label__m4Mjr\",\"input\":\"ContactForm_input__rn2fD\"};","import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst fetchContactsRequest = createAction('contacts/fetchContactsRequest');\r\nconst fetchContactsSuccess = createAction('contacts/fetchContactsRequest');\r\nconst fetchContactsError = createAction('contacts/fetchContactsRequest');\r\n\r\nconst addContactRequest = createAction('contacts/addContactRequest');\r\nconst addContactSuccess = createAction('contacts/addContactSuccess');\r\nconst addContactError = createAction('contacts/addContactError');\r\n\r\nconst deleteContactRequest = createAction('contacts/deleteContactRequest');\r\nconst deleteContactSuccess = createAction('contacts/deleteContactSuccess');\r\nconst deleteContactError = createAction('contacts/deleteContactError');\r\n\r\nconst filteredContact = createAction('contacts/filtered');\r\n\r\nexport {\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  filteredContact,\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport {\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  filteredContact,\r\n} from './contacts-actions';\r\n\r\nconst INITIAL_CONTACTS = [];\r\n\r\nconst itemsReducer = createReducer(INITIAL_CONTACTS, {\r\n  [fetchContactsSuccess]: (_, { payload }) => payload,\r\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\r\n\r\n  [deleteContactSuccess]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filterReducer = createReducer('', {\r\n  [filteredContact]: (_, { payload }) => payload,\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [addContactRequest]: () => true,\r\n  [deleteContactRequest]: () => true,\r\n  [fetchContactsRequest]: () => true,\r\n\r\n  [addContactSuccess]: () => false,\r\n  [deleteContactSuccess]: () => false,\r\n  [fetchContactsSuccess]: () => false,\r\n\r\n  [addContactError]: () => false,\r\n  [deleteContactError]: () => false,\r\n  [fetchContactsError]: () => false,\r\n});\r\n\r\nconst error = createReducer(null, {\r\n  [fetchContactsRequest]: () => null,\r\n  [fetchContactsError]: (_, action) => action.payload,\r\n  [addContactRequest]: () => null,\r\n  [addContactError]: (_, action) => action.payload,\r\n  [deleteContactRequest]: () => null,\r\n  [deleteContactError]: (_, action) => action.payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  items: itemsReducer,\r\n  filter: filterReducer,\r\n  loading,\r\n  error,\r\n});\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport {\r\n  //persistStore,\r\n  //persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport contactsReducer from './Contacts/contacts-redusers';\r\n//import storage from 'redux-persist/lib/storage';\r\n\r\n/* const persistConfig = {\r\n  key: 'contacts',\r\n  storage,\r\n  blacklist: ['filter'],\r\n}; */\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n];\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: contactsReducer,\r\n  },\r\n  devTools: process.env.NODE_ENV === 'development',\r\n  middleware,\r\n});\r\n\r\n//const persistor = persistStore(store);\r\n\r\nexport { store };\r\n","import React from 'react';\r\nimport { createUseStyles } from 'react-jss';\r\n\r\nconst useStyles = createUseStyles({\r\n  container: {\r\n    margin: {\r\n      right: 'auto',\r\n      left: 'auto',\r\n      top: '20px',\r\n    },\r\n    padding: '20px',\r\n    width: '400px',\r\n  },\r\n});\r\n\r\nconst Container = ({ children }) => {\r\n  const classes = useStyles();\r\n\r\n  return <div className={classes.container}>{children}</div>;\r\n};\r\n\r\nexport default Container;\r\n","import axios from 'axios';\r\nimport {\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n} from './contacts-actions';\r\n\r\naxios.defaults.baseURL = 'http://localhost:4040/contacts';\r\n\r\nconst fetchContacts = () => async dispatch => {\r\n  dispatch(fetchContactsRequest());\r\n  try {\r\n    const { data } = await axios.get('/contacts');\r\n    dispatch(fetchContactsSuccess(data));\r\n  } catch (error) {\r\n    dispatch(fetchContactsError(error));\r\n  }\r\n};\r\n\r\nconst addContact = contact => (dispatch, getState) => {\r\n  const { contacts } = getState();\r\n  const isUnique = contacts.items.some(item => item.name === contact.name);\r\n  if (isUnique) {\r\n    alert(`${contact.name} is already in contacts`);\r\n    return;\r\n  }\r\n  dispatch(addContactRequest());\r\n\r\n  axios\r\n    .post('', contact)\r\n    .then(({ data }) => dispatch(addContactSuccess(data)))\r\n    .catch(error => dispatch(addContactError(error)));\r\n};\r\n\r\nconst deleteContact = id => async dispatch => {\r\n  dispatch(deleteContactRequest());\r\n  try {\r\n    await axios.delete(`/${id}`);\r\n    dispatch(deleteContactSuccess(id));\r\n  } catch (error) {\r\n    dispatch(deleteContactError(error));\r\n  }\r\n};\r\n\r\nexport { fetchContacts, addContact, deleteContact };\r\n","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nconst getFilterValue = state => state.contacts.filter;\r\n\r\nconst getLoading = state => state.contacts.loading;\r\n\r\nconst getError = state => state.contacts.error;\r\n\r\nconst getAllContacts = state => state.contacts.items;\r\n\r\nconst getFilteredContacts = createSelector(\r\n  [getAllContacts, getFilterValue],\r\n  (allContacts, filter) => {\r\n    const normalizedFilter = filter.toLowerCase();\r\n    return allContacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(normalizedFilter),\r\n    );\r\n  },\r\n);\r\n\r\nexport { getFilterValue, getLoading, getFilteredContacts, getError };\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { createUseStyles } from 'react-jss';\r\n\r\nconst useStyles = createUseStyles({\r\n  button: {\r\n    marginLeft: '10px',\r\n    backgroundColor: 'white',\r\n    border: ['1px', 'solid', 'grey'],\r\n    borderRadius: '5px',\r\n    cursor: 'pointer',\r\n    '&:hover': {\r\n      backgroundColor: ' rgba(116, 113, 255, 0.34)',\r\n    },\r\n  },\r\n  item: {\r\n    marginBottom: '10px',\r\n  },\r\n});\r\n\r\nconst ContactListItem = ({ name, number, id, onDeleteContact }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <li className={classes.item}>\r\n      <span>{name}</span>: <span>{number}</span>\r\n      <button\r\n        className={classes.button}\r\n        type=\"button\"\r\n        onClick={() => onDeleteContact(id)}\r\n      >\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nContactListItem.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  id: PropTypes.string.isRequired,\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactListItem;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ContactListItem from '../ContactListItem';\r\n\r\nconst ContactList = ({ filteredContacts, onDeleteContact }) => {\r\n  return (\r\n    <ul>\r\n      {filteredContacts.map(({ id, name, number }) => (\r\n        <ContactListItem\r\n          key={id}\r\n          id={id}\r\n          name={name}\r\n          number={number}\r\n          onDeleteContact={onDeleteContact}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  filteredContacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n","import { connect } from 'react-redux';\r\nimport { deleteContact } from '../../redux/Contacts/contacts-operations';\r\nimport { getFilteredContacts } from '../../redux/Contacts/contacts-selectors';\r\nimport ContactList from './ContactList';\r\n\r\nconst mapStateToProps = state => ({\r\n  filteredContacts: getFilteredContacts(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onDeleteContact: id => dispatch(deleteContact(id)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { filteredContact } from '../../redux/Contacts/contacts-actions';\r\nimport { getFilterValue } from '../../redux/Contacts/contacts-selectors';\r\nimport { createUseStyles } from 'react-jss';\r\n\r\nconst useStyles = createUseStyles({\r\n  input: {\r\n    padding: '5px',\r\n    outline: 'none',\r\n    '&:focus': {\r\n      border: ['2px', 'solid', 'blue'],\r\n      boxShadow: [\r\n        'inset',\r\n        '0px',\r\n        '0px',\r\n        '3px',\r\n        '3px',\r\n        'rgba(116, 113, 255, 0.34)',\r\n      ],\r\n    },\r\n  },\r\n});\r\n\r\nconst Filter = ({ value, onHandleChange }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div>\r\n      <h3 className={classes.titel}>Find contacts by name</h3>\r\n      <input\r\n        className={classes.input}\r\n        type=\"text\"\r\n        placeholder=\"Search contact\"\r\n        name=\"filter\"\r\n        value={value}\r\n        onChange={onHandleChange}\r\n      ></input>\r\n    </div>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onHandleChange: PropTypes.func.isRequired,\r\n};\r\nconst mapStateToProps = state => ({\r\n  value: getFilterValue(state),\r\n});\r\nconst mapDispatchToProps = dispatch => ({\r\n  onHandleChange: event => dispatch(filteredContact(event.target.value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import React from 'react';\r\nimport { createUseStyles } from 'react-jss';\r\n\r\nconst useStyles = createUseStyles({\r\n  button: {\r\n    cursor: 'pointer',\r\n    margin: {\r\n      right: 'auto',\r\n      left: 'auto',\r\n      top: '20px',\r\n      bottom: '20px',\r\n    },\r\n    display: 'block',\r\n    padding: '5px',\r\n    width: '140px',\r\n    backgroundColor: 'transparent',\r\n    borderRadius: '5px',\r\n    '&:hover': {\r\n      backgroundColor: ' rgba(116, 113, 255, 0.34)',\r\n    },\r\n  },\r\n});\r\n\r\nconst ButtonForm = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <button className={classes.button} type=\"submit\">\r\n      Add contact\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default ButtonForm;\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ButtonForm from './ButtonForm';\r\nimport { connect } from 'react-redux';\r\nimport { addContact } from '../../redux/Contacts/contacts-operations';\r\nimport styles from './ContactForm.module.css';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nconst ContactForm = ({ onSubmitForm }) => {\r\n  const labelInputIdName = uuidv4();\r\n  const labelInputIdNumber = uuidv4();\r\n\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  const handleSubmit = event => {\r\n    const contact = { id: uuidv4(), name: name, number: number };\r\n    event.preventDefault();\r\n    onSubmitForm(contact);\r\n\r\n    resetForm();\r\n  };\r\n\r\n  const handleChange = ({ currentTarget }) => {\r\n    const { name, value } = currentTarget;\r\n    if (name === 'name') setName(value);\r\n    if (name === 'number') setNumber(value);\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  return (\r\n    <form className={styles.form} onSubmit={handleSubmit}>\r\n      <label className={styles.label} htmlFor={labelInputIdName}>\r\n        Name\r\n      </label>\r\n      <input\r\n        className={styles.input}\r\n        id={labelInputIdName}\r\n        type=\"text\"\r\n        name=\"name\"\r\n        required\r\n        placeholder=\"Enter name\"\r\n        value={name}\r\n        onChange={handleChange}\r\n      ></input>\r\n      <label className={styles.label} htmlFor={labelInputIdNumber}>\r\n        Number\r\n      </label>\r\n      <input\r\n        className={styles.input}\r\n        id={labelInputIdNumber}\r\n        type=\"tel\"\r\n        name=\"number\"\r\n        required\r\n        placeholder=\"Enter you number\"\r\n        value={number}\r\n        onChange={handleChange}\r\n      ></input>\r\n      <ButtonForm />\r\n    </form>\r\n  );\r\n};\r\n\r\nContactForm.propTypes = {\r\n  onSubmitForm: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onSubmitForm: contact => dispatch(addContact(contact)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(ContactForm);\r\n","import React from 'react';\n\nimport Container from './components/Container';\nimport ContactList from './components/ContactList/ContactList.container';\nimport Filter from './components/Filter';\nimport ContactForm from './components/ContactForm';\n\nfunction App() {\n  return (\n    <Container>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </Container>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n//import { PersistGate } from 'redux-persist/integration/react';\nimport { Provider } from 'react-redux';\nimport { store } from './redux/store';\nimport App from './App';\n\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      {/*  <PersistGate loading={null} persistor={persistor}> */}\n      <App />\n      {/* </PersistGate> */}\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}